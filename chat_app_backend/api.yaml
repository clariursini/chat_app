openapi: 3.0.0
info:
  title: Chat Application API
  description: API for user registration, login, and messaging functionality
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /register:
    post:
      summary: Register a new user
      description: Registers a new user with an email, password, and nickname.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                nickname:
                  type: string
              required:
                - email
                - password
                - nickname
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  validation_link:
                    type: string
        '422':
          description: Email is already registered or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /validate/{id}:
    get:
      summary: Validate a user's account
      description: Validates the user's account by the given user ID.
      operationId: validateUser
      parameters:
        - name: id
          in: path
          description: User ID to validate
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account validated successfully
        '422':
          description: Account already validated
        '404':
          description: User not found

  /login:
    post:
      summary: Login a user
      description: Authenticates a user and generates a JWT token if successful.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully with a JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiration:
                    type: string
                    format: date-time
                  nickname:
                    type: string
        '401':
          description: Unauthorized (invalid credentials or unvalidated user)
        '422':
          description: Validation error (invalid input)

  /channels:
    get:
      summary: List subscribed and available public channels
      description: Returns a list of channels the user is subscribed to and public channels the user is not subscribed to.
      operationId: listChannels
      responses:
        '200':
          description: A list of channels
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscribed_channels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        subscriber_count:
                          type: integer
                  remaining_public_channels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        subscriber_count:
                          type: integer
                  direct_messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nickname:
                          type: string

  /channels/{id}/subscribe:
    post:
      summary: Subscribe to a channel
      description: Subscribe the authenticated user to a channel.
      operationId: subscribeChannel
      parameters:
        - name: id
          in: path
          description: Channel ID to subscribe to
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully subscribed to the channel
        '422':
          description: Already subscribed or error

  /channels/{id}/unsubscribe:
    delete:
      summary: Unsubscribe from a channel
      description: Unsubscribe the authenticated user from a channel.
      operationId: unsubscribeChannel
      parameters:
        - name: id
          in: path
          description: Channel ID to unsubscribe from
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully unsubscribed from the channel
        '422':
          description: Not subscribed or error

  /channels/{id}/messages:
    post:
      summary: Send a message to a channel
      description: Sends a message to a specified channel.
      operationId: createChannelMessage
      parameters:
        - name: id
          in: path
          description: Channel ID to send a message to
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Message sent successfully
        '422':
          description: Message sending failed

  /messages:
    post:
      summary: Send a direct message
      description: Sends a direct message to a specific user.
      operationId: sendDirectMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                direct_recipient_id:
                  type: integer
              required:
                - content
                - direct_recipient_id
      responses:
        '201':
          description: Direct message sent successfully
        '422':
          description: Failed to send the message

  /direct_messages/{id}:
    get:
      summary: Get direct messages with a user
      description: Fetches direct messages between the authenticated user and the specified recipient.
      operationId: getDirectMessages
      parameters:
        - name: id
          in: path
          description: Recipient user ID for direct messages
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of direct messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_with:
                    type: object
                    properties:
                      id:
                        type: integer
                      nickname:
                        type: string
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        content:
                          type: string
                        sender_id:
                          type: integer
                        sender_nickname:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                  stream_name:
                    type: string

  /users:
    get:
      summary: "Get list of users"
      description: "Fetches a list of all users except the currently authenticated user."
      tags:
        - "Users"
      security:
        - bearerAuth: []  # Assuming you're using Bearer token for authentication
      responses:
        '200':
          description: "List of users"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    nickname:
                      type: string
                      example: "john_doe"
        '500':
          description: "Failed to fetch users"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to fetch users"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
